<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     			http://www.springframework.org/schema/beans/spring-beans.xsd
     			http://www.springframework.org/schema/mvc
        		http://www.springframework.org/schema/mvc/spring-mvc.xsd
     			http://www.springframework.org/schema/context
    			http://www.springframework.org/schema/context/spring-context.xsd
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">
    <!-- 配置springmvc -->
    <!-- 1、开启springmvc注解模式 -->
    <!-- 简化配置
        （1）自动注册DefaultAnnotationHandlerMapping(注解映射),AnnotationMethodHandlerAdapter(注解Adapter)【都会加载到spring里面】
        （2）提供一系列：数据绑定，数字和日期的format @NumberFormat ,@DataTimeFormat,
            xml,json默认读写支持。
     -->


    <!--websocket注册
    <bean id="websocket" class="com.zsl.WebSocket.WebsocketEndPoint"/>

    <websocket:handlers>
        <websocket:mapping path="/zsl/websocket" handler="websocket"/>
        <websocket:handshake-interceptors>
            <bean class="com.zsl.WebSocket.HandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>-->



    <mvc:annotation-driven/>

    <!-- 2、静态资源配置（因为servlet-mapping映射原因配置该项）
        （1）加入对静态资源的处理：js,gif,png
        （2）允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!-- 3、配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000"></property>
        <property name="defaultEncoding" value="utf-8"></property>
    </bean>

    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="/error"></property>
    </bean>-->

    <!-- 2、静态资源配置（因为servlet-mapping映射原因配置该项）
        （1）加入对静态资源的处理：js,gif,png
        （2）允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>


    <mvc:interceptors>
        <!--登陆状态拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/*" />
            <bean class="com.zsl.interceptor.LoginCheckInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!--验证码-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">125</prop>
                        <prop key="kaptcha.image.height">45</prop>
                        <prop key="kaptcha.textproducer.font.size">30</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>

                        <prop key="kaptcha.textproducer.char.string">1234567890</prop>
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>


    <!--<prop key="kaptcha.textproducer.char.string">0123456789abcdefhyk</prop>-->


    <!-- 4、扫描web相关的bean(controller包) -->
    <context:component-scan base-package="com.zsl"/>

    <mvc:resources  location="/WEB-INF/resources" mapping="resources/**"/>
    <mvc:resources location="/WEB-INF/resources/css/" mapping="css/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/images/" mapping="images/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/js/" mapping="js/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/fonts/" mapping="fonts/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/assets/" mapping="assets/**"></mvc:resources>



</beans>